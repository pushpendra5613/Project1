(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

(function ($, window, undefined) {

	/***************************************
    *
    *   ToggleContents
    *
    ****************************************/

	var ToggleContents = function ToggleContents() {
		this.$toggleContents = $(".js-toggleContents");
	};

	ToggleContents.prototype.initialize = function () {
		var _this = this;
		_this.$toggleContents.each(function () {
			var $trigger = $(this).find(".js-toggleContents__trigger");
			$trigger.off();
			$trigger.on("click", function (e) {
				e.preventDefault();
				var $this = $(this);
				if (!$this.hasClass("is-clicked")) {
					$this.parent().find(".js-toggleContents__holder").slideUp();
					$this.addClass("is-clicked");
					$this.find("span").text("開く");
				} else {
					$this.parent().find(".js-toggleContents__holder").slideDown();
					$this.removeClass("is-clicked");
					$this.find("span").text("隠す");
				}
			});
		});
	};

	$(function () {
		var toggleContents = new ToggleContents();
		toggleContents.initialize();
	});

	/***************************************
    *
    *   SetEqHeight
    *
    ****************************************/

	var SetEqHeight = require("./mod/setEqHeight.js");
	$(function () {
		var setEqHeight = new SetEqHeight([
		/* /support.html */
		{
			targetParent: ".guidance",
			targets: ".guidance__itemList__item__texts"
		},
		/* /support/manual.html */
		{
			targetParent: ".category__itemList",
			targets: ".category__itemList__item__holder__texts"
		}, {
			targetParent: ".eachFaq",
			targets: ".eachFaq__itemList__item__texts"
		}]);
		setEqHeight.initialize();
	});
})(jQuery, window);

},{"./mod/setEqHeight.js":2}],2:[function(require,module,exports){
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

module.exports = function () {
	function SetEqHeight(param) {
		_classCallCheck(this, SetEqHeight);

		this.param = param;
	}

	_createClass(SetEqHeight, [{
		key: "initialize",
		value: function initialize() {
			var _this = this;
			var paramLength = this.param.length;
			var $targetParent;
			var targets;
			for (var i = 0; i < paramLength; i++) {
				$targetParent = $(_this.param[i].targetParent);
				targets = _this.param[i].targets;
				_this.setEventListener($targetParent, targets);
			}
		}
	}, {
		key: "setEventListener",
		value: function setEventListener($targetParent, targets) {
			var _this = this;
			$.subscribe("onLoadHandler", function () {
				_this.giveHeight($targetParent, targets);
			});
			$.subscribe("onResizeHandler", function () {
				_this.giveHeight($targetParent, targets);
			});
		}
	}, {
		key: "giveHeight",
		value: function giveHeight($targetParent, targets) {
			var _this = this;
			$targetParent.each(function () {
				var maxHeight = 0;
				var $targets = $(this).find(targets);
				$targets.each(function () {
					$(this).css("height", "auto");
					var _h = $(this).outerHeight();
					if (_h > maxHeight) {
						maxHeight = _h;
					}
				});
				$targets.css({
					"height": maxHeight + "px"
				});
			});
		}
	}]);

	return SetEqHeight;
}();

/*
var SetEqHeight = require("./mod/setEqHeight.js");
var setEqHeight = new SetEqHeight([
	{
		targetParent:".parentA",
		targets:".childA"
	},
	{
		targetParent:".parentB",
		targets:".childB"
	}
]);
setEqHeight.initialize();
*/

},{}]},{},[1]);
